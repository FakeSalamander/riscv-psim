\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Basic CPU Design}}{8}{}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Program execution over time.}}{12}{}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces Program execution over time, with pipelining.}}{12}{}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces CPU with Pipelining Latches.}}{14}{}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces Program execution without pipelining.}}{15}{}%
\contentsline {figure}{\numberline {2.5}{\ignorespaces Program execution with pipelining.}}{16}{}%
\contentsline {figure}{\numberline {2.6}{\ignorespaces Program execution wtih no Stalling. Data Hazard occurs.}}{17}{}%
\contentsline {figure}{\numberline {2.7}{\ignorespaces Program execution with Stalling. No Data Hazard.}}{17}{}%
\contentsline {figure}{\numberline {2.8}{\ignorespaces CPU Design with stall control.}}{19}{}%
\contentsline {figure}{\numberline {2.9}{\ignorespaces Program execution without Stalling}}{19}{}%
\contentsline {figure}{\numberline {2.10}{\ignorespaces The three major types of forwarding.}}{20}{}%
\contentsline {figure}{\numberline {2.11}{\ignorespaces Final CPU Design.}}{22}{}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces color-coded CPU design. Red is for data stored in the State struct, Blue is for data in the Logic struct. Multiplexors are definitionally stateless, and are all in the Logic struct.}}{25}{}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces The Simulator's command-line-based GUI.}}{32}{}%
